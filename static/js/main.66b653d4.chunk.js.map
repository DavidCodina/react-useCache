{"version":3,"sources":["hooks/useCache.js","Context.js","components/pages/HomePage.js","components/Spinner.js","components/pages/UsersPage.js","helpers/getAllUrlParams.js","components/pages/PostsPage.js","components/pages/PostPage.js","components/pages/NotFoundPage.js","components/navigation/Router.js","components/navigation/OffCanvas.js","components/navigation/Navigation.js","App.js","index.js"],"names":["getData","url","config","timeout","axios","get","createTimestamp","Date","getTime","exceedsMaxAge","t1","t2","maxAge","Error","earlierTimestamp","laterTimestamp","getTimestampDifference","defaults","validateStatus","status","reducer","state","action","type","console","log","toLocaleTimeString","loading","loaded","data","error","payload","useCache","cache","useRef","initialState","useReducer","dispatch","fetchData","forceRefresh","current","setTimeout","then","res","cachedAt","now","catch","err","cachedData","Context","createContext","Provider","Consumer","props","fetchUsersData","fetchUsers","fetchPostsData","fetchPosts","fetchPostData","fetchPost","value","children","HomePage","className","onClick","history","push","pathname","search","style","minWidth","href","target","rel","Spinner","variant","classes","size","containerStyle","containerClasses","useContainer","setSpinnerClasses","obj","prop","hasOwnProperty","isEmpty","width","height","role","Home","loadingUsers","loadedUsers","usersData","usersDataError","showSpinner","showError","showData","Array","isArray","length","useEffect","Fragment","filter","position","top","left","transform","fontFamily","textShadow","map","user","maxWidth","name","email","id","getAllUrlParams","queryString","split","window","location","slice","hash","arr","i","a","paramName","paramValue","match","key","replace","index","exec","PostsPage","loadingPosts","loadedPosts","postsData","postsDataError","params","decodeURIComponent","post","to","title","PostPage","loadingPost","loadedPost","postData","postDataError","useState","setTitle","body","NotFoundPage","color","fontSize","margin","viewBox","fill","d","Router","exact","path","render","UsersPage","component","OffCanvas","headerContent","bodyContent","backdrop","closeButton","closeButtonTheme","scrollable","html","document","getElementsByTagName","offCanvasRef","togglerRef","backdropRef","offCanvasVisible","setOffCanvasVisible","backdropVisible","setBackdropVisible","handleBodyClick","e","contains","parentElement","hideOffCanvas","addEventListener","removeEventListener","offCanvas","classList","remove","visibility","overflow","ref","tabIndex","querySelector","add","showOffCanvas","right","Navigation","activeClassName","borderRight","App","useContext","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.66b653d4.chunk.js","sourcesContent":["import { useReducer, useRef } from 'react';\nimport axios                  from 'axios';\n// import { getData }         from '../helpers/axios-helper';\n\naxios.defaults.validateStatus = function(status){ return true; }; // Default: return status >= 200 && status < 300; \n\n\n/* ====================================================================\n                            Helpers\n==================================================================== */\n\n\nfunction getData(url, config){\n  config = config || { timeout: 1000 * 25 };\n  return axios.get(url, config);\n}\n\n\n// https://flaviocopes.com/how-to-get-timestamp-javascript/\n// Return the number of milliseconds since 1970/01/01:\nfunction createTimestamp(){ \n  const timestamp = new Date().getTime();\n  return timestamp;\n}\n\n\nfunction getTimestampDifference(t1, t2){\n  // https://humanwhocodes.com/blog/2009/03/10/the-art-of-throwing-javascript-errors-part-2/\n  // http://www.javascriptkit.com/javatutors/trycatch2.shtml\n  if (typeof t1 !== 'number' || typeof t2 !== 'number'){ throw new Error('getTimestampDifference only accepts numbers.'); }\n  let earlierTimestamp = t1;\n  let laterTimestamp   = t2;\n  if (t1 > t2){\n    earlierTimestamp = t2;\n    laterTimestamp   = t1;\n  }\n  const difference = laterTimestamp - earlierTimestamp;\n  return difference;\n}\n\n\nfunction exceedsMaxAge(t1, t2, maxAge){ \n  if (typeof t1 !== 'number' || typeof t2 !== 'number' || typeof maxAge !== 'number'){ \n    throw new Error('exceedsMaxAge only accepts numbers.'); \n  }\n  const difference = getTimestampDifference(t1, t2);\n  if (difference > maxAge){ return true; }\n  return false;\n}\n\n\n/* ====================================================================\n                            reducer\n==================================================================== */\n\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'LOADING':  \n    console.log(\"Loading at:\", new Date().toLocaleTimeString('en-US'));    \n      return { \n        ...state, \n        loading: true,\n        loaded: false,\n        data: null, \n        error: null \n      };\n\n    case 'LOADED_CACHE': \n      console.log(\"Loaded data from cache at:\", new Date().toLocaleTimeString('en-US'));\n      return { \n        ...state,         \n        loading: false,\n        loaded: true,         \n        data: action.payload,  \n        error: null\n      };\n    \n    case 'LOADED_NEW': \n      console.log(\"Loaded data from API response at:\", new Date().toLocaleTimeString('en-US'));\n      return { \n        ...state, \n        loading: false, \n        loaded: true, \n        data: action.payload,\n        error: null\n      };\n\n    case 'ERROR':    \n      console.log(\"Error occurred at:\", new Date().toLocaleTimeString('en-US'));\n      return { \n        ...state, \n        loading: false, \n        loaded: false, \n        data: null,\n        error: action.payload \n      };\n\n    default: \n      return state;\n  }\n};\n\n\n/* ====================================================================\n                            useCache\n==================================================================== */\n\n\nconst useCache = (maxAge = 1000 * 60 * 5) => {\n  ////////////////////////////////////////////////////////////////////////////\n  //\n  //  https://www.smashingmagazine.com/2020/07/custom-react-hook-fetch-cache-data/\n  //  Declaring cache in a different scope works. That is using const cache = {};\n  //  in the outer scope.\n  //\n  //  But it makes our hook go against the principle of a pure function: \n  //  https://www.sitepoint.com/functional-programming-pure-functions/\n  //  That said, I have removed the reducer into the outer scope because it's \n  //  so much cleaner.\n  //\n  //  Instead we can declare it within useCache, but then we have\n  //  to make sure to implement useRef. With useRef, we can set and retrieve mutable values \n  //  at ease and its value persists throughout the component's lifecycle.\n  //\n  ////////////////////////////////////////////////////////////////////////////\n  const cache = useRef({});\n\n  const initialState = {\n    maxAge:  maxAge, // Defaults to 5 minutes.\n    loading: false,\n    loaded:  false, \n    data:    null,  \n    error:   null\n  };\n  \n  const [ state, dispatch ] = useReducer(reducer, initialState);\n\n\n  const fetchData = (url, config = null, forceRefresh = false) => {\n    if (!url){ return; }\n    // This prevents calls from bleeding into each other.\n    // It also makes it more or less synchronous.\n    if (state.loading){ return console.log(\"Currently loading. Returning early.\"); }\n\n    \n    dispatch({ type: 'LOADING' });\n\n    \n    if (!forceRefresh){ // If forceRefresh === false, then check the cache first.\n      if (cache.current[url]){\n        // Assuming, fetchData is called in a useEffect on page mount, \n        // it will always look for cached data first.\n        // This potentially means less API calls -especially for pages\n        // that dynamically load content (i.e., a Details Page).\n        const cachedData = cache.current[url];\n        dispatch({ type: 'LOADED_CACHE', payload: cachedData });\n        return; // DO NOT PROCEED IF YOU HAVE CACHED DATA! \n      }\n    } \n\n\n    setTimeout(() => { // Delayed response for demo only.\n      getData(url, config)\n      .then(res  => { \n        if (res.status >= 200 && res.status < 300 && res.data){\n\n          // mutate res.data such that it contains a timestamp.\n          res.data.cachedAt  = createTimestamp();\n          cache.current[url] = res.data;\n          dispatch({ type: 'LOADED_NEW', payload: res.data });\n\n          // Cache Busting!\n          // Set a timeout here that compares the cachedAt timestamp against now.\n          // If now exceeds cachedAt + maxAge, then the data has expired.\n          // Unless there has been in intervening foreRefresh, it should have expired.\n          setTimeout(function(){\n            const now         = createTimestamp(); // Or use cache.current[url].cachedAt + maxAge.\n            const dataExpired = exceedsMaxAge(cache.current[url].cachedAt, now, maxAge);\n            if (dataExpired){\n              console.log(`Deleting cached data with key of: ${url}.`);\n              delete cache.current[url];\n              // Deleting the cached data doesn't clear the state data.\n              // Nor would you want it to. Imagine that you are currently looking at that\n              // page and then the data suddenly disappeared.\n            } \n            else { console.log(`Data must've been force refreshed. Not deleting: ${url}.`); }\n          }, maxAge + 1000);\n        } else {\n          console.log(\"Forced the error!\");\n          ////////////////////////////////////////////////////////////////////////////\n          //\n          //  Axios is currently set up as follows:\n          //  axios.defaults.validateStatus = function(status){ return true; };\n          //  This means that NO STATUS CODE WILL GO TO THE CATCH BLOCK.\n          //  go to the catch block, in such cases we need to still dispatch an\n          //  error action. I may change the Axios implementation later,\n          //  but for now we can just force the hook to act as if Axios generated an error.\n          //  I just prefer doing it here, rather than letting Axios do it, and forgetting \n          //  what Axios is doing.\n          //\n          //  There is a difference between a 404 coming from the website, and a 404 coming from the browser\n          //  fetchUsers('http://httpstat.us/404');                      // usersDataError: {code: 404, description: \"Not Found\"}\n          //  fetchUsers('https://jsonplaceholder.typicode.com/uzers');  // usersDataError: {}  \n          //\n          //  Gotcha: In the unlikely event of a 404 Not Found Error that is\n          //  generated by the browser res.data becomes {}, and this can potentially break the UI\n          //  map() method when the expected data is an array.\n          //  Such a situation might also be a good place for an error boundary.\n          //\n          ////////////////////////////////////////////////////////////////////////////\n          dispatch({ type: 'ERROR', payload: res.data });\n        }\n      })\n      .catch(err => {\n        dispatch({ type: 'ERROR', payload: err }); // Would err differ from res.data?\n      });\n    }, 1000);\n  };\n\n  return [ state, fetchData ];\n};\n\n\nexport default useCache;\n\n","import React, { createContext } from 'react';\nimport useCache                 from './hooks/useCache';\n\n\n/* =========================================================================\n                               Context.js\n========================================================================= */\n\n\nexport const Context  = createContext({});\nexport const Consumer = Context.Consumer;\n\n\n// React.createContext() returns an object with a Provider and a Consumer.\n// The Provider is used here within the Custom Provider, but THEY ARE NOT THE SAME THING.\nexport const Provider = (props) => {\n\n  ////////////////////////////////////////////////////////////////////////////\n  //\n  //  Why do we use several caches?\n  //  You may be tempted to create a single cache for ALL data.\n  //  This is a bad idea because one can make a data request, go to another\n  //  page that also makes a data request, and now you've got that state\n  //  that was intended for that page, bleeding into another page.\n  //  For example, suppose you had two pages that got data on a button click.\n  //  On page 1 you press the button, then move on to page two, but don't press the\n  //  button there. This will cause Page 2 to initiate its loader, and eventually\n  //  attempt to render data because it sees loaded:true.\n  //  For this reason, there should be multiple caches.\n  //  This means we want at least one cache for every page that caches data.\n  //  \n  //  Now suppose we had a page that had multiple cards, and each card had a\n  //  'Learn More' button. When that button was clicked it then made a request\n  //  for additional data. If you were using the same cache for each card, you\n  //  would have the same probleme whereby status intended for the first request,\n  //  could bleed into the second request.\n  //\n  //  Really, the card should be going to a Card Details page just suppose it wasn't\n  //  Obviously having a separate cache for each individual piece of data is also bad.\n  //  In this case I would suggest not caching the data at all. Instead, just keep\n  //  the data in local state.\n  //\n  ////////////////////////////////////////////////////////////////////////////\n\n  //! I need to name these different -like usersCacheState, etc.\n  const [ fetchUsersData, fetchUsers ] = useCache(1000 * 60); \n  const [ fetchPostsData, fetchPosts ] = useCache(1000 * 60); // This is overfetching, but oh well...\n  const [ fetchPostData,  fetchPost  ] = useCache(1000 * 60); \n\n\n  return (\n    <Context.Provider \n      value={{ \n        fetchUsersData, fetchUsers,\n        fetchPostsData, fetchPosts,\n        fetchPostData,  fetchPost\n      }}\n    >\n      { props.children }\n    </Context.Provider>\n  );\n};","import React from 'react'; \n\n// Gotcha: Something about the PolygonContainer prevents elements inside\n// of it from being position: fixed.\n// https://stackoverflow.com/questions/38679945/why-is-an-element-with-position-fixed-moving-with-a-non-positioned-sibling\n// https://dev.to/takaaki_suger/when-position-fixed-is-not-working-7i6\n\n\nfunction HomePage(props){\n\n\n  const forceRefreshPosts = () => props.history.push({ pathname: '/posts', search: '?forceRefresh=true' });\n  const goToPosts         = () => props.history.push('/posts');\n  \n  return (\n    <article className=\"mt-5 article\">\n      <h2 className=\"text-white-3d\">Overview:</h2>\n\n\n      <p>Open the browser console to see log statements of the underlying operations.</p>\n\n\n      <div className=\"text-center\">\n        <button className=\"btn btn-outline-gray me-3\" onClick={forceRefreshPosts} style={{ minWidth: 160 }}>Force Refresh Posts</button>\n        <button className=\"btn btn-outline-gray\"      onClick={goToPosts} style={{ minWidth: 160 }}>Go To Posts</button>\n      </div>\n\n\n      <div className=\"horizontal-ruler\">\n        <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n        <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n        <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n      </div>\n\n\n      <p>The <code>useCache()</code> hook is built on top of Axios. It provides fetching, caching, and\n      cache-busting functionality.</p>\n\n\n      <pre><code>{`\n  import { useReducer, useRef } from 'react';\n  import axios                  from 'axios';\n  axios.defaults.validateStatus = function(status){ return true; }; // Default: return status >= 200 && status < 300; \n  \n  \n  /* ====================================================================\n                              Helpers\n  ==================================================================== */\n  \n  \n  function getData(url, config){\n    config = config || { timeout: 1000 * 25 };\n    return axios.get(url, config);\n  }\n  \n  \n  function createTimestamp(){ \n    const timestamp = new Date().getTime();\n    return timestamp;\n  }\n  \n  \n  function getTimestampDifference(t1, t2){\n    if (typeof t1 !== 'number' || typeof t2 !== 'number'){ throw new Error('getTimestampDifference only accepts numbers.'); }\n    let earlierTimestamp = t1;\n    let laterTimestamp   = t2;\n    if (t1 > t2){\n      earlierTimestamp = t2;\n      laterTimestamp   = t1;\n    }\n    const difference = laterTimestamp - earlierTimestamp;\n    return difference;\n  }\n  \n  \n  function exceedsMaxAge(t1, t2, maxAge){ \n    if (typeof t1 !== 'number' || typeof t2 !== 'number' || typeof maxAge !== 'number'){ \n      throw new Error('exceedsMaxAge only accepts numbers.'); \n    }\n    const difference = getTimestampDifference(t1, t2);\n    if (difference > maxAge){ return true; }\n    return false;\n  }\n  \n  \n  /* ====================================================================\n                              reducer\n  ==================================================================== */\n  \n  \n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'LOADING':  \n      console.log(\"Loading at:\", new Date().toLocaleTimeString('en-US'));    \n        return { \n          ...state, \n          loading: true,\n          loaded: false,\n          data: null, \n          error: null \n        };\n  \n      case 'LOADED_CACHE': \n        console.log(\"Loaded data from cache at:\", new Date().toLocaleTimeString('en-US'));\n        return { \n          ...state,         \n          loading: false,\n          loaded: true,         \n          data: action.payload,  \n          error: null\n        };\n      \n      case 'LOADED_NEW': \n        console.log(\"Loaded data from API response at:\", new Date().toLocaleTimeString('en-US'));\n        return { \n          ...state, \n          loading: false, \n          loaded: true, \n          data: action.payload,\n          error: null\n        };\n  \n      case 'ERROR':    \n        console.log(\"Error occurred at:\", new Date().toLocaleTimeString('en-US'));\n        return { \n          ...state, \n          loading: false, \n          loaded: false, \n          data: null,\n          error: action.payload \n        };\n  \n      default: \n        return state;\n    }\n  };\n  \n  \n  /* ====================================================================\n                              useCache\n  ==================================================================== */\n  \n  \n  const useCache = (maxAge = 1000 * 60 * 5) => {\n    const cache = useRef({});\n  \n    const initialState = {\n      maxAge:  maxAge, // Defaults to 5 minutes.\n      loading: false,\n      loaded:  false, \n      data:    null,  \n      error:   null\n    };\n    \n    const [ state, dispatch ] = useReducer(reducer, initialState);\n  \n  \n    const fetchData = (url, config = null, forceRefresh = false) => {\n      if (!url){ return; }\n      if (state.loading){ return; }\n  \n      \n      dispatch({ type: 'LOADING' });\n  \n      \n      if (!forceRefresh){ \n        if (cache.current[url]){\n          const cachedData = cache.current[url];\n          dispatch({ type: 'LOADED_CACHE', payload: cachedData });\n          return; // DO NOT PROCEED IF YOU HAVE CACHED DATA! \n        }\n      } \n  \n  \n      setTimeout(() => { // Delayed response for demo only.\n        getData(url, config)\n        .then(res  => { \n          if (res.status >= 200 && res.status < 300 && res.data){\n            res.data.cachedAt  = createTimestamp();\n            cache.current[url] = res.data;\n            dispatch({ type: 'LOADED_NEW', payload: res.data });\n  \n            // Cache Busting!\n            setTimeout(function(){\n              const now         = createTimestamp();\n              const dataExpired = exceedsMaxAge(cache.current[url].cachedAt, now, maxAge);\n              if (dataExpired){\n                delete cache.current[url]; \n              } \n            }, maxAge + 1000);\n          } else {\n            // Axios is currently set up such that NO STATUS CODE WILL GO TO THE CATCH BLOCK.\n            dispatch({ type: 'ERROR', payload: res.data });\n          }\n        })\n        .catch(err => {\n          dispatch({ type: 'ERROR', payload: err }); \n        });\n      }, 1000);\n    };\n  \n    return [ state, fetchData ];\n  };\n  \n  \n  export default useCache;\n  \n      `}</code></pre>\n\n\n\n      <p>It returns a <code>fetchData</code> function, and <code>state</code> \n      associated to the data request (i.e., cached data, or new API call).</p>\n\n\n      <pre><code>{`\n  {\n    maxAge:  Number, // milliseconds\n    loading: Boolean,\n    loaded:  Boolean, \n    data:    [] | {} | ...\n    error:   null | {}\n  }\n      `}</code></pre>\n\n\n      <p>It is important that the hook be implemented at a higher level than\n      the component presenting the data. The current demo implements the hook \n      inside of Context.js:</p>\n\n\n      <pre><code>{`\n  import React, { createContext } from 'react';\n  import useCache                 from './hooks/useCache';\n\n\n  export const Context  = createContext({});\n  export const Consumer = Context.Consumer;\n\n\n  export const Provider = (props) => {\n\n    // Admittedly, the naming conventions are confusing.\n    //      state,          fetchData   \n    const [ fetchUsersData, fetchUsers ] = useCache(1000 * 60); \n    const [ fetchPostsData, fetchPosts ] = useCache(1000 * 60); \n    const [ fetchPostData,  fetchPost  ] = useCache(1000 * 60); \n\n\n    return (\n      <Context.Provider \n        value={{ \n          fetchUsersData, fetchUsers,\n          fetchPostsData, fetchPosts,\n          fetchPostData,  fetchPost\n        }}\n      >\n        { props.children }\n      </Context.Provider>\n    );\n  };\n      `}</code></pre>\n      \n      \n      <p>Usage looks something like this:</p>\n\n\n      <pre><code>{`\n  function PostsPage(props){\n    const { value: { fetchPostsData, fetchPosts } } = props;\n    const { \n      loading: loadingPosts, \n      loaded:  loadedPosts, \n      data:    postsData, \n      error:   postsDataError \n    } = fetchPostsData;\n  \n  \n    const showSpinner = loadingPosts   && !loadedPosts;\n    const showError   = postsDataError && !loadingPosts && !loadedPosts;\n    const showData    = loadedPosts    && Array.isArray(postsData) && postsData.length > 0; \n  \n  \n    useEffect(() => { \n      if (props.location.search){\n        const params = getAllUrlParams(decodeURIComponent(props.location.search));\n  \n        if (params.forceRefresh && params.forceRefresh === 'true'){\n          fetchPosts('https://jsonplaceholder.typicode.com/posts?_limit=10', null, true); \n        } else {\n          fetchPosts('https://jsonplaceholder.typicode.com/posts?_limit=10'); \n        }\n      } else {\n        fetchPosts('https://jsonplaceholder.typicode.com/posts?_limit=10'); \n      }\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  \n  \n    const renderPosts = () => {\n      if (showSpinner){   return ... } \n      if (showError){     return ... }\n      else if (showData){ return ... }\n      return null; \n    };\n  \n  \n    return (\n      <React.Fragment>\n        { renderPosts() } \n      </React.Fragment>     \n    );\n  }\n      `}</code></pre>\n\n\n      <p>When cached data exists, it will attempt to show that data instead of making a \n      new API request. However, if the cached data has exceeded <code>maxAge</code> a\n      new API request will be made and the cache will be updated. Additionally, one\n      may pass <code>?forceRefresh=true</code>. Then on the associated page some \n      code should be set up to check for query parameters:</p>\n\n\n      <pre><code>{`\n  useEffect(() => { \n    if (props.location.search){\n      const params = getAllUrlParams(decodeURIComponent(props.location.search));\n\n      if (params.forceRefresh && params.forceRefresh === 'true'){\n        fetchPosts('https://jsonplaceholder.typicode.com/posts?_limit=10', null, true); \n      } else {\n        fetchPosts('https://jsonplaceholder.typicode.com/posts?_limit=10'); \n      }\n    } else {\n      fetchPosts('https://jsonplaceholder.typicode.com/posts?_limit=10'); \n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n      `}</code></pre>\n\n\n      <p>With this setup one can force a data refresh. This is especially important after a user has \n      updated their information and is programmatically redirected to the corresponding page. Otherwise,\n      it will <em>appear</em> as though the <code>POST</code>, <code>PUT</code>, <code>PATCH</code>,\n      or <code>DELETE</code> reqiests did not occur. For other caching solutions \n      see <a href=\"https://react-query.tanstack.com\" target=\"_blank\" rel=\"noreferrer\">React Query</a> and <a href=\"https://swr.vercel.app\" target=\"_blank\" rel=\"noreferrer\">SWR</a>.</p>\n\n\n      <p>I don't know if it's possible, but one might also try to \n      remove <code>?forceRefesh=true</code> in cases where the user is going back using the \n      browser's back button.</p>\n\n\n      <p><strong>Note:</strong> this system will not persist data across refreshes.\n      In most cases that shouldn't be necessary, excepting login data. For that use\n      a <code>useLocalStorage()</code> hook.</p>\n    </article>     \n  );\n}\n\n\nexport default HomePage;","import React from 'react'; \n\n\n// Helper for object literals.\nfunction isEmpty(obj){\n  for (var prop in obj){ if (obj.hasOwnProperty(prop)){ return false; } }\n  return true;\n}\n\n\n// useContainer = false by default. However, configuring containerClasses or containerStyle,\n// will still cause the spinner to render with a <div> wrapper.\n// In the absence of any other styling, the spinner will default to the currentColor\n// of the parent element.\nfunction Spinner({ \n  variant          = '',\n  classes          = '',\n  size             = 50, \n  style            = {},\n  containerStyle   = {},\n  containerClasses = '',\n  useContainer     = false\n}){\n\n  const setSpinnerClasses = () => {\n    if (variant  && classes){  return `spinner-border text-${variant} ${classes}`; }\n    if (variant  && !classes){ return `spinner-border text-${variant}`; }\n    if (!variant && classes){  return `spinner-border ${classes}`; }\n    // Same as: if (!variant && !classes){ return `spinner-border`; }\n    return 'spinner-border';\n  };\n\n\n  const renderSpinner = () => {\n    if (useContainer || containerClasses || !isEmpty(containerStyle)){\n      return ( \n        <div \n          className={containerClasses}\n          style={containerStyle}>\n          <div \n            className={ setSpinnerClasses() }\n            style={{ width: size, height: size, ...style }} \n            role=\"status\"\n          >\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        </div> \n      ); \n    } \n\n\n    return (\n      <div \n        className={ setSpinnerClasses() }\n        style={{ width: size, height: size, ...style }} \n        role=\"status\"\n      >\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    );\n  };\n\n\n  return renderSpinner();\n}\n\n\nexport default Spinner;","import React, { useEffect } from 'react'; \nimport Spinner              from '../Spinner';\n\n\nfunction Home(props){\n  const { value: { fetchUsersData, fetchUsers } } = props;\n  const { loading: loadingUsers,  loaded: loadedUsers, data: usersData, error: usersDataError } = fetchUsersData;\n  const showSpinner = loadingUsers && !loadedUsers;\n  const showError   = usersDataError && !loadingUsers && !loadedUsers;\n  ////////////////////////////////////////////////////////////////////////////\n  //\n  //  Checking for an Array when you expect an array is a good pattern.\n  //  Why? Because there is a rare gotcha in the unlikely event of a 404 Not Found Error\n  //  GENERATE BY THE BROWSER. res.data becomes {}, and this can potentially break the UI\n  //  map() method when the expected data is an array.\n  //  Such a situation might be also be a good place for an error boundary.\n  //\n  ////////////////////////////////////////////////////////////////////////////\n  const showData    = (loadedUsers) && Array.isArray(usersData) && usersData.length > 0; // Choosing not to show error if cached data exists.\n\n  const getUsers = () => {\n    // Test error handling\n    // if (cachedUsers){\n    //   // There is a difference between a 404 coming from the website, and a 404 coming from the browser\n    //   // fetchUsers('http://httpstat.us/404');                      // usersDataError: {code: 404, description: \"Not Found\"}\n    //   // fetchUsers('https://jsonplaceholder.typicode.com/uzers');  // usersDataError: {}  \n    //   return;\n    // }\n    // fetchUsers('http://httpstat.us/404'); \n    fetchUsers('https://jsonplaceholder.typicode.com/users');\n  };\n\n\n  // https://github.com/facebook/create-react-app/issues/6880\n  // useEffect(() => getUsers(), []); // eslint-disable-line react-hooks/exhaustive-deps\n  // useEffect(() => { console.log(\"usersData: \", usersData); }, [usersData]);\n\n\n  useEffect(() => {\n    // Currently Axios will not throw errors regardless of status code, \n    // but useRefreshNowCache() will create an error for 300+ status codes.\n    // I prefer handling it myself, rather than letting Axios automate it.\n    // Should I do something with the error?\n    if (usersDataError){\n      console.error(\"usersDataError: \", usersDataError);\n    }  \n  }, [usersDataError]);\n\n\n  const renderUserInfo = () => {\n    if (showSpinner){ \n      return (\n        <Spinner \n          size={75} \n          variant=\"pink\" \n          style={{ filter: 'drop-shadow(0px 1px 1px rgba(0,0,0,0.5))' }} \n          containerClasses=\"d-inline-block\"\n          containerStyle={{ position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%, -50%' }}\n          useContainer={false}\n        />\n      ); \n    } \n\n    if (showError){\n      return <h1 className=\"text-pink text-center\" style={{ fontFamily: 'Montserrat', textShadow: '0px 1px 2px rgba(0,0,0,0.25' }}>An error occurred!</h1>\n    }\n\n    else if (showData){\n      return (\n        <React.Fragment>\n          { \n            usersData.map(user => {\n              return (\n                <div key={ user.id } className=\"mx-auto mb-5 bg-light p-3 border border-dark rounded-3 shadow-sm\" style={{ maxWidth: 600 }}>\n                  <p><strong>Name:</strong> { user.name }</p>\n                  <p className=\"mb-0\"><strong>Email:</strong> { user.email }</p>\n                </div>\n              );\n            })\n          }\n        </React.Fragment>\n      );\n    }\n\n    \n    return null; // This should never happen.\n  };\n\n\n  return (\n    <React.Fragment>\n      <h2 className=\"my-5 text-white-3d text-center\">Users</h2>\n\n      <div className=\"horizontal-ruler\">\n        <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n        <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n        <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n      </div>\n\n      <div className=\"mb-5 text-center\">\n        <button className=\"btn btn-outline-gray\" onClick={getUsers}>Manually Get Users </button>\n      </div>\n\n      { renderUserInfo() }  \n    </React.Fragment>     \n  );\n}\n\n\nexport default Home;","// https://www.sitepoint.com/get-url-parameters-with-javascript/\n\n// file:///Users/davidcodina/Desktop/URLSearchParams/index.html?name=David&status=cool\n// It's best that this is in ES5 because if you're using this, then there's a\n// good chance that you're writing for IE11 compatibility.\n\n\nexport default function getAllUrlParams(url){\n  //! If using HashRouter and no url is passed you have to use 'hash'.\n  var queryString = '';\n  if (url){\n    queryString = url.split('?')[1]\n  } else if (window.location.search){\n    queryString = window.location.search.slice(1);\n  } else if (window.location.hash){\n    console.log(\"hash worked.\");\n    queryString = window.location.hash.split('?')[1];\n  }\n\n\n  var obj = {}; // Store potential parameters.\n\n\n  if (queryString){\n    // Stuff after # is not part of query string, so get rid of it.\n    queryString = queryString.split('#')[0];\n\n    //Split queryString into its component parts using '&' as the delimiter.\n    var arr = queryString.split('&'); // => [\"name=David\", \"status=cool\"]\n\n\n\n    //Loop through this array and split each item into a key and a value,\n    //which we’ll soon put into our object:\n    for (var i = 0; i < arr.length; i++) {\n      //Separate the keys and the values\n      var a = arr[i].split('=');\n\n      //Set parameter name and value (use 'true' if empty)\n      //If there isn’t a parameter value, the value gets set to true (to indicate that the parameter name exists).\n      //Feel free to change this depending on your use case.\n      var paramName  = a[0];\n      var paramValue = typeof (a[1]) === 'undefined' ? true : a[1];\n\n      //////////////////////////////////////////////////////////////////\n      //\n      //  Optional: Keep case consistent.\n      //  You can set all parameter names and values to lowercase.\n      //  That way, you can avoid situations where someone sends traffic to\n      //  a URL with example=TRUE instead of example=true and your script breaks.\n      //  However, if your query string needs to be case sensitive, feel free to omit this part\n      //\n      //  In my opinion this seems like a bad default, but it\n      //  was part of the original implementation.\n      //\n      //////////////////////////////////////////////////////////////////\n      // paramName = paramName.toLowerCase();\n      // if (typeof paramValue === 'string') paramValue = paramValue.toLowerCase();\n\n\n      //////////////////////////////////////////////////////////////////\n      //\n      //  Next, we need to deal with the various types of input we can receive in paramName.\n      //  This could be an indexed array, a non-indexed array, or a regular string.\n      //\n      //  To illustrate this, here’s some sample input, with the output we would expect:\n      //\n      //      getAllUrlParams('http://example.com/?colors[0]=red&colors[2]=green&colors[6]=blue');\n      //      // { \"colors\": [ \"red\", null, \"green\", null, null, null, \"blue\" ] }\n      //\n      //      getAllUrlParams('http://example.com/?colors[]=red&colors[]=green&colors[]=blue');\n      //      // { \"colors\": [ \"red\", \"green\", \"blue\" ] }\n      //\n      //      getAllUrlParams('http://example.com/?colors=red&colors=green&colors=blue');\n      //      // { \"colors\": [ \"red\", \"green\", \"blue\" ] }\n      //\n      //      getAllUrlParams('http://example.com/?product=shirt&color=blue&newuser&size=m');\n      //      // { \"product\": \"shirt\", \"color\": \"blue\", \"newuser\": true, \"size\": \"m\" }\n      //\n      //\n      //////////////////////////////////////////////////////////////////\n\n      // If the paramName ends with square brackets,then do this:\n      // Example: ?name=David&numbers[]=123&numbers[]=456&numbers[]=789\n      // Inside this if statement we further delineate between indexed and\n      // non-indexed array.\n      if (paramName.match(/\\[(\\d+)?\\]$/)){\n        //Create key if it doesn't exist\n        var key = paramName.replace(/\\[(\\d+)?\\]/, '');\n        if (!obj[key]){ obj[key] = []; }\n\n        // If it's an indexed array e.g. colors[2]\n        // If it’s an indexed array, we want the corresponding paramValue to be an array,\n        // with the value inserted at the correct position.\n        if (paramName.match(/\\[\\d+\\]$/)) {\n          //Get the index value and add the entry at the appropriate position\n          var index = /\\[(\\d+)\\]/.exec(paramName)[1];\n          obj[key][index] = paramValue;\n\n\n        // Otherwise add the value to the end of the array\n        // If it’s a non-indexed array, we want the corresponding paramValue to be\n        // an array with the element pushed on to it.\n        } else {\n          obj[key].push(paramValue);\n        }\n      // Otherwise we're dealing with a string.\n      // If it’s a string, we want to create a regular property on the object and\n      // assign the paramValue to it, unless the property already exists,\n      // in which case we want to convert the existing paramValue to an array and push\n      // the incoming paramValue on to that.\n      //End of: if (paramName.match(/\\[(\\d+)?\\]$/)){ ... }\n      } else {\n        if (!obj[paramName]){ // eslint-disable-line no-lonely-if\n          //If it doesn't exist, create property\n          obj[paramName] = paramValue;\n        } else if (obj[paramName] && typeof obj[paramName] === 'string'){\n          //If property does exist and it's a string, convert it to an array\n          obj[paramName] = [obj[paramName]];\n          obj[paramName].push(paramValue);\n        } else {\n          //Otherwise add the property\n          obj[paramName].push(paramValue);\n        }\n      }\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////\n  //\n  // Finally, we return our object with the parameters and values.\n  // If your URL has any encoded special characters like spaces (encoded as %20),\n  // you can also decode them to get the original value like this:\n  //\n  //    // assume a url parameter of test=a%20space\n  //\n  //      var original = getAllUrlParams().test; // 'a%20space'\n  //      var decoded = decodeURIComponent(original); // 'a space'\n  //\n  //\n  //  Just be careful not to decode something that’s already decoded or\n  //  else your script will error out, especially if percents are involved.\n  //\n  //////////////////////////////////////////////////////////////////////\n  return obj;\n}\n\n// Usage:\n// const qs     = window.location.search;\n// const params = getAllUrlParams(qs);\n// console.log(params); // => { name: \"david\", status: \"cool\" }\n//\n// If no argument is passed, then it will get it from window.location.search.\n// Also because we are returning an object we can chain the specific property we are looking for.\n// console.log(getAllUrlParams().name); // => David\n","import React, { useEffect } from 'react';\nimport getAllUrlParams      from '../../helpers/getAllUrlParams';\nimport { Link }             from 'react-router-dom';\nimport Spinner              from '../Spinner';\n\n\nfunction PostsPage(props){\n  const { value: { fetchPostsData, fetchPosts } } = props;\n  const { loading: loadingPosts, loaded: loadedPosts, data: postsData, error: postsDataError } = fetchPostsData;\n\n\n  const showSpinner = loadingPosts   && !loadedPosts;\n  const showError   = postsDataError && !loadingPosts && !loadedPosts;\n  const showData    = loadedPosts    && Array.isArray(postsData) && postsData.length > 0; \n\n\n  useEffect(() => { \n    if (props.location.search){\n      const params = getAllUrlParams(decodeURIComponent(props.location.search));\n\n      if (params.forceRefresh && params.forceRefresh === 'true'){\n        fetchPosts('https://jsonplaceholder.typicode.com/posts?_limit=10', null, true); \n      } else {\n        fetchPosts('https://jsonplaceholder.typicode.com/posts?_limit=10'); \n      }\n    } else {\n      fetchPosts('https://jsonplaceholder.typicode.com/posts?_limit=10'); \n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n\n  const renderPosts = () => {\n    if (showSpinner){ \n      return (\n        <Spinner \n          size={75} \n          variant=\"pink\" \n          style={{ filter: 'drop-shadow(0px 1px 1px rgba(0,0,0,0.5))' }} \n          containerClasses=\"d-inline-block\"\n          containerStyle={{ position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%, -50%' }}\n          useContainer={false}\n        />\n      ); \n    } \n\n    if (showError){\n      return <h1 className=\"text-pink text-center\" style={{ fontFamily: 'Montserrat', textShadow: '0px 1px 2px rgba(0,0,0,0.25' }}>An error occurred!</h1>\n    }\n\n    else if (showData){\n      return (\n        <ul className=\"users-list w-90 mx-auto mb-5 list-group list-group-flush border border-dark rounded-3 shadow-sm overflow-hidden\">\n          {\n            postsData.map(post => {\n              return (\n                <li key={post.id} className=\"d-flex align-items-center list-group-item list-group-item-action\">\n                  <Link \n                  className=\"custom-link\" \n                    to={{ \n                      pathname: `/posts/${post.id}`, \n                      search: `?title=${post.title}` \n                    }}\n                  >Title: { post.title}</Link>\n                </li>\n              );\n            })\n          }\n        </ul> \n      );\n    }\n\n    return null; // This should never happen.\n  };\n\n\n  return (\n    <React.Fragment>\n      <h2 className=\"my-5 text-white-3d text-center\">Posts</h2>\n\n      <div className=\"horizontal-ruler\">\n        <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n        <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n        <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n      </div>\n\n      { renderPosts() } \n    </React.Fragment>     \n  );\n}\n\n\nexport default PostsPage;","import React, { useState, useEffect } from 'react';\nimport getAllUrlParams from '../../helpers/getAllUrlParams';\nimport Spinner         from '../Spinner';\n\n\nfunction isEmpty(obj){\n  for (var prop in obj){\n    if (obj.hasOwnProperty(prop)){ return false; }\n  }\n  return true;\n}\n\nfunction PostPage(props){\n  const { value: { fetchPostData, fetchPost } } = props;\n  const { loading: loadingPost, loaded: loadedPost, data: postData, error: postDataError } = fetchPostData;\n  const [ title, setTitle ] = useState('?');\n  const showSpinner         = loadingPost   && !loadedPost;\n  const showError           = postDataError && !loadingPost && !loadedPost;\n  const showData            = loadedPost    && !isEmpty(postData); \n\n\n  const getPost = () => { \n    if (!props.match.params.id){ return; }\n    fetchPost(`https://jsonplaceholder.typicode.com/posts/${props.match.params.id}`); \n  };\n\n  useEffect(() => getPost(), []); // eslint-disable-line react-hooks/exhaustive-deps\n  \n\n  // Set title based on value of query parameter.\n  useEffect(() => {\n    if (!props.location.search){ return; } \n    const params = getAllUrlParams(decodeURIComponent(props.location.search));\n    if (params.title){ setTitle(params.title); }\n  }, [props.location.search]);\n\n\n  const renderPost = () => {\n    if (showSpinner){ \n      return (\n        <Spinner \n          size={75} \n          variant=\"pink\" \n          style={{ filter: 'drop-shadow(0px 1px 1px rgba(0,0,0,0.5))' }} \n          containerClasses=\"d-inline-block\"\n          containerStyle={{ position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%, -50%' }}\n          useContainer={false}\n        />\n      ); \n    } \n\n    if (showError){\n      return <h1 className=\"text-pink text-center\" style={{ fontFamily: 'Montserrat', textShadow: '0px 1px 2px rgba(0,0,0,0.25' }}>An error occurred!</h1>\n    }\n\n    else if (showData){\n      return (\n        <div className=\"mx-auto mb-5 bg-light p-3 border border-dark rounded-3 shadow-sm\" style={{ maxWidth: 600 }}>\n          <p><strong>Title:</strong> {postData.title}</p>\n          <p className=\"mb-0\"><strong>Body:</strong> {postData.body}</p>\n        </div>\n      );\n    }\n\n    return null; // This should never happen.\n  };\n\n\n  return (\n    <React.Fragment>\n      <h2 className='mt-5 text-white-3d text-center'>{ title }</h2>\n\n\n      <div className=\"horizontal-ruler\">\n        <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n        <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n        <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n      </div>\n\n      { renderPost() }\n    </React.Fragment>     \n  );\n}\n\n\nexport default PostPage;","import React from 'react'; \n\n\nfunction NotFoundPage(){\n  return (\n    <React.Fragment>\n      <h1 \n        className=\"my-5 text-center\" \n        style={{ color: '#FF355E', fontFamily: 'Creepster', fontSize: 64, textShadow: '0px 2px 4px rgba(0,0,0,0.5)' }}\n      >Not Found!!!</h1>\n\n\n      <div className=\"horizontal-ruler red\">\n        <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n        <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n        <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n      </div>\n      \n      <div className=\"mx-auto\" style={{ width: '40%' }}>\n        <svg \n          style={{ margin: '0 auto', width: '100%', filter: 'drop-shadow(0px 2px 4px rgba(0,0,0,0.5))' }}\n          viewBox=\"0 0 512 512\" \n          fill=\"#FF355E\"\n        >\n          <path d=\"M296.606,364.393l-29.999-30c-5.857-5.858-15.355-5.858-21.213,0l-30,30C205.985,373.801,212.646,390,226,390H286\n          C299.304,390,306.05,373.836,296.606,364.393z\"/>\n        \n          <path d=\"M165.999,179.997c-41.355,0-75.001,33.645-75.001,75.001c0,41.355,33.645,75.001,75.001,75.001S241,296.354,241,254.997\n          C241,213.642,207.354,179.997,165.999,179.997z M165.999,300.198c-24.813,0-45.2-20.387-45.2-45.2s20.387-45.2,45.2-45.2\n          s45.2,20.387,45.2,45.2S190.812,300.198,165.999,300.198z\"/>\n          \n          <path d=\"M346.001,179.997c-41.355,0-75.001,33.645-75.001,75.001c0,41.355,33.645,75.001,75.001,75.001\n          c41.355,0,75.001-33.645,75.001-75.001S387.356,179.997,346.001,179.997z M346.001,300.198c-24.813,0-45.2-20.387-45.2-45.2\n          s20.387-45.2,45.2-45.2s45.201,20.387,45.201,45.2S370.814,300.198,346.001,300.198z\"/>\n          \n          <path d=\"M476.108,270.988c15.607-74.732-7.02-151.096-61.007-205.086v-0.001C372.602,23.404,316.099,0,256,0\n          C195.901,0,139.398,23.404,96.898,65.902c-53.869,53.87-76.716,130.182-61.007,205.091c-6.143,17.917-6.485,37.065-0.951,55.682\n          c9.404,31.617,35.56,54.97,68.461,61.251c3.795,1.08,4.018,0.017,11.46,1.242c2.047,0.337,4.001,0.621,6.139,0.763L121,447.954\n          c0,18.193,10.705,34.432,27.272,41.369c24.699,10.343,63.434,22.671,107.706,22.675c0.008,0,0.015,0.001,0.023,0.001\n          c0.008,0,0.016-0.001,0.023-0.001c44.269-0.004,83.006-12.333,107.709-22.676c16.565-6.938,27.269-23.176,27.269-41.367v-58.095\n          c2.077-0.139,4.014-0.403,6.046-0.714c7.929-1.213,8.245-0.09,12.239-1.437c32.914-6.607,58.868-30.138,68.004-61.833\n          C482.584,307.52,482.162,288.646,476.108,270.988z M448.465,317.568c-6.117,21.222-23.856,36.907-46.311,40.962\n          c-12.258,0.374-10.552,2.829-23.167,0.267c-9.289-1.887-17.985,5.224-17.985,14.7v74.458c0,6.066-3.477,11.442-8.856,13.696\n          c-5.484,2.296-12.864,4.862-21.343,7.605v-32.457c0-8.284-6.516-14.8-14.8-14.8c-8.284,0-15,6.716-15,15v40.324\n          c-9.389,1.89-19.669,3.176-30.2,3.93V436.8c0-8.284-6.516-14.8-14.8-14.8c-8.284,0-15,6.716-15,15v44.453\n          c-10.531-0.753-20.811-2.44-30.2-4.329V436.8c0-8.284-6.516-14.8-14.8-14.8s-15,6.716-15,15v32.457\n          c-8.478-2.743-15.658-5.509-21.141-7.805c-5.382-2.254-9.059-7.83-9.059-13.897l0.002-74.45c0-9.462-8.482-16.39-17.784-14.501\n          c-13.377,2.716-10.435,0.035-23.659-0.285c-21.986-4.08-39.448-19.506-45.661-40.396c-4.049-13.621-3.459-27.605,1.707-40.441\n          c1.144-2.843,1.39-5.968,0.705-8.954c-15.458-67.379,5.15-134.755,52.005-181.612C154.945,50.284,203.914,29.8,256,29.8\n          s101.055,20.483,137.887,57.314c47.708,47.711,67.151,115.603,52.006,181.611c-0.685,2.987-0.439,6.112,0.705,8.954\n          C451.693,290.339,452.338,304.132,448.465,317.568z\"/>\n        </svg>\n      </div>\n    </React.Fragment>     \n  );\n}\n\n\nexport default NotFoundPage;","import React        from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport HomePage     from '../pages/HomePage';\nimport UsersPage    from '../pages/UsersPage';\nimport PostsPage    from '../pages/PostsPage';\nimport PostPage     from '../pages/PostPage';\nimport NotFoundPage from '../pages/NotFoundPage';\n\n\nconst Router = (props) => {\n  const { value } = props;\n\n\n  return (\n    <Switch>  \n      <Route \n        exact path=\"/\"\n        render={(props) => {\n          return <HomePage {...props} value={value}  />;\n        }}\n      />\n\n\n      <Route \n        exact path=\"/users\"\n        render={(props) => {\n          return <UsersPage {...props} value={value}  />;\n        }}\n      />\n\n      <Route \n        exact path=\"/posts\"\n        render={(props) => {\n          return <PostsPage {...props} value={value}  />;\n        }}\n      />\n\n      <Route \n        path=\"/posts/:id\" \n        render={(props) => {\n          return <PostPage {...props} value={value}  />;\n        }}\n      />\n      \n      <Route component={NotFoundPage} />\n    </Switch>\n  )\n};\n\n\nexport default Router;\n\n","import React, { useState, useEffect, useRef } from 'react';\n///////////////////////////////////////////////////////////////////////////////\n//\n//  Bootstrap also uses an .offcanvas-toggling class.\n//  This class has no associated CSS selector.\n//  Presumably, it is used kind of like a state variable such\n//  that internally it is part of if checks in various methods.\n//  I don't see any need for it. In theory it would prevent the menu\n//  from opening/closing while it was closing/opening. However, that\n//  behavior is fine with me.\n//\n//  For this implementation, I am reaching directly into the DOM.\n//  This just seemed like the easiest approach, albeit not the 'React way'.\n//  One could instead conditionally apply the classes and styles to the JSX.\n//  That said, you'd still have to apply styles to the DOM for the body.\n//\n///////////////////////////////////////////////////////////////////////////////\n\n\nfunction OffCanvas({\n  title            = null, \n  headerContent    = null,\n  bodyContent      = <div className=\"p-5 bg-light text-center border rounded-3\">Body Content Goes Here...</div>,\n  position         = 'start', \n  backdrop         = false,\n  closeButton      = true,\n  closeButtonTheme = 'default',\n  scrollable       = false,\n  classes          = '',\n  style            = {} }){\n\n  const html                                      = document.getElementsByTagName('html')[0];\n  const body                                      = document.getElementsByTagName('body')[0]; \n  const transitionDuration                        = 300; // Mataches Bootstrap CSS transition duration.\n  const offCanvasRef                              = useRef();\n  const togglerRef                                = useRef();\n  const backdropRef                               = useRef();\n  const [ offCanvasVisible, setOffCanvasVisible ] = useState(false);\n  const [ backdropVisible, setBackdropVisible ]   = useState(false);\n  \n\n  \n  useEffect(() => {\n    const handleBodyClick = (e) => { \n      // Don't do anything when in the menu or when the menu is already not visible.\n      if (!e.target.contains(offCanvasRef.current) || !offCanvasVisible){ return; } \n      // Because of the above line, clicking on the toggler will cause handleBodyClick \n      // to return early. We don't have to worry about toggling it open, then indadvertantly\n      // triggering the close functionality. However, just to be sure, we can do this:\n      if (e.target === togglerRef.current || e.target.parentElement === togglerRef.current){ return; }\n      hideOffCanvas(); \n    };\n  \n    body.addEventListener('click', handleBodyClick);\n    return () => { body.removeEventListener('click', handleBodyClick); };\n  }, [offCanvasVisible, body]); // eslint-disable-line react-hooks/exhaustive-deps\n  // Including offCanvasVisible is necessary because would otherwise use stale data.\n  // It also want hideOffCanvas. For now it's better to leave it out. It would require\n  // using useCallback.\n\n\n  const showOffCanvas = () => {\n    if (!offCanvasRef.current){ return; }\n    const offCanvas = offCanvasRef.current;\n\n    if (!offCanvas.classList.contains('show')){      \n      if (backdrop){\n        const otherModalBackdrop = document.querySelector('.modal-backdrop.show');\n        // Presumably, if there is another .modal-backdrop.show, then you wouldn't be\n        // able to open the menu anyways. However, just in case...\n        if (!otherModalBackdrop){\n          setBackdropVisible(true);\n          setTimeout(() => { backdropRef.current && backdropRef.current.classList.add('show') }, 100);\n        }\n      }\n\n      if (!scrollable){ \n        html.style.overflow = 'hidden';\n        body.style.overflow = 'hidden';\n      }\n\n      offCanvas.style.visibility = 'visible';\n      offCanvas.classList.add('show');\n      setOffCanvasVisible(true);\n    }\n  };\n\n\n  const hideOffCanvas = () => {\n    if (!offCanvasRef.current){ return; }\n    const offCanvas = offCanvasRef.current;\n\n    if (offCanvas.classList.contains('show')){\n      offCanvas.classList.remove('show');\n      setOffCanvasVisible(false);\n\n      if (backdrop){\n        backdropRef.current && backdropRef.current.classList.remove('show');\n      }\n\n      setTimeout(() => {\n        offCanvas.style.visibility = 'hidden';\n        if (!scrollable){ \n          html.style.overflow = '';\n          body.style.overflow = ''; \n        }\n      }, transitionDuration); \n\n\n      setTimeout(() => {\n        if (backdrop){ setBackdropVisible(false); }\n      }, 250); // Based on App.css :  .modal-backdrop.fade { transition: opacity 0.25s linear; }\n    }\n  };\n\n\n  const toggleOffCanvas = () => {\n    if (!offCanvasRef.current){ return; }\n    const offCanvas = offCanvasRef.current;\n    if  (!offCanvas.classList.contains('show')){ \n      showOffCanvas(offCanvas); \n    } else if (offCanvas.classList.contains('show')){  \n      hideOffCanvas(offCanvas); \n    }\n  }\n\n\n  return (\n    <React.Fragment>\n      <div \n        ref={offCanvasRef} \n        className={ classes ? `offcanvas offcanvas-${position} ${classes}` : `offcanvas offcanvas-${position}`} \n        style={style}\n        tabIndex=\"-1\"\n      >\n\n        { headerContent && (\n          <div className=\"offcanvas-header\">\n            { (typeof headerContent !== 'function') ? headerContent : headerContent() }\n            { \n              closeButton && (\n                <button \n                  className={(closeButtonTheme === 'white') ? \"btn-close btn-close-white text-reset\" : \"btn-close text-reset\"} \n                  type=\"button\" \n                  onClick={hideOffCanvas}\n                ></button>\n              )  \n            } \n          </div>\n        )}\n\n\n        { !headerContent && title && (\n          <div className=\"offcanvas-header\">\n            <h5 className=\"offcanvas-title\">{ title }</h5>\n            { closeButton && <button className=\"btn-close text-reset\" type=\"button\" onClick={hideOffCanvas}></button> }\n          </div>\n        )}\n\n\n        <div className=\"offcanvas-body\">\n          { (typeof bodyContent !== 'function') ? bodyContent : bodyContent() }\n        </div>\n      </div>\n\n      <button \n        ref={togglerRef}\n        id=\"custom-toggler\" \n        className=\"navbar-toggler\" \n        type=\"button\" \n        onClick={toggleOffCanvas}\n        style={ position === 'end' ? { left: 25, right: 0 } : {} }\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n\n      { backdropVisible && <div ref={backdropRef} className=\"modal-backdrop fade\" onClick={hideOffCanvas}></div> }\n    </React.Fragment>     \n  );\n}\n\n\nexport default OffCanvas;","import React             from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport OffCanvas         from './OffCanvas';\n\n\nconst Navigation = (props) => {\n  const headerContent = () => {\n    return (\n      <Link \n        className=\"navbar-brand p-0 fs-1 lh-1 link-light\" \n        style={{ fontFamily: 'Montserrat' }}\n        to=\"/\"\n      >WebTek</Link>\n    );   \n  } \n  \n  \n  const BodyContent = () => {\n    return (\n      <nav id=\"primary-navigation\">\n        <div className=\"container-fluid\">\n          <NavLink className=\"nav-link\" activeClassName=\"active-link\" exact to=\"/\">Home</NavLink>\n          <NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/users\">Users</NavLink>\n          <NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/posts\">Posts</NavLink>\n        </div>\n      </nav>\n    );\n  };\n\n\n  /////////////////////////////////////////////////////////////////////////////\n  //\n  // headerContent can be straight JSX or a function.\n  //   <OffCanvas title=\"not used\" headerContent={<h5 className=\"offcanvas-title text-secondary\">Header Content from JSX...</h5>} />\n  //   <OffCanvas title=\"not used\" headerContent={headerContent} />\n  //\n  //   title is an optional string. However, if headerContent is included, it will not get used. \n  //\n  //   bodyContent can be straight JSX or a function.\n  //   bodyContent={<div className=\"p-5 bg-light text-center border rounded-3\">Bodycontent from JSX...</div>}\n  //   bodyContent={bodyContent}\n  //\n  //   position can be 'start', 'end', 'top', or 'bottom'. It defaults to 'start'.\n  //\n  //  closeButtonTheme can either be 'default' (i.e., anything but a theme color), or 'white'.\n  //\n  /////////////////////////////////////////////////////////////////////////////\n\n\n  return (\n    <OffCanvas \n      title=\"not used\" \n      headerContent={headerContent} \n      bodyContent={BodyContent} \n      backdrop={true} \n      position='start'\n      scrollable={false}\n      closeButton={true}\n      closeButtonTheme='white'\n      classes='bg-deep-space'\n      style={{ borderRight: '2px solid #000' }}\n    />      \n  );\n};\n\n\nexport default Navigation;\n","\nimport React, { useContext } from 'react';\nimport { Context }           from './Context';\nimport { HashRouter }        from 'react-router-dom'; // HashRouter generally works better for GitHub, but normally use BrowserRouter.\nimport Router                from './components/navigation/Router';\nimport Navigation            from './components/navigation/Navigation';\n\nimport './scss/bootstrap/bootstrap-icons.css';\nimport './scss/bootstrap/custom-bootstrap.scss';\nimport './scss/App.scss';\n\n\nfunction App(){  \n  // value gets passed into <Router />, then through the routes to each page.\n  const value = useContext(Context);\n\n  \n  return (\n    <HashRouter>\n    <header id=\"primary-header\">\n      <Navigation />\n    </header>\n\n    <main className=\"pb-5\">\n      <div className=\"container-fluid pt-3 px-md-5\">\n        <Router value={value} />\n      </div>        \n    </main>\n    </HashRouter>\n  );\n}\n\n\nexport default App;\n\n","import ReactDOM     from 'react-dom';\nimport { Provider } from './Context';\nimport App          from './App';\n\n\nReactDOM.render(<Provider><App /></Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}