//!

//!  But what if a cacheState was changing right as the setTimeout ran? 

//!  Fortunately, the setTimeout doesn't actually effect cacheState.

//!  I don't think useReducer helps prevent race conditions.

//!  It's not like there's a huge risk for race conditions.

//!  Rather, it just standardizes actions. 

//!  The cacheState is scoped to each instance the hook, so

//!  We probably also want to change useState to useReducer.

//!  Would be nice to have the feature whereby it makes another call 

//!  when the window is refocused.

//! //////////////////////////////////////////////////////////////////////////////

//! Delayed response for demo only.  

//! If there is NO cache[queryKey] then this will run.

//! It's super annoying to have to write fetchData INSIDE of the useEffect, 

//! but it seems to be the only way to make it work.
